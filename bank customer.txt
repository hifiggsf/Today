import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from keras.models import Sequential
from keras.layers import Dense

# Load and preprocess data
df = pd.read_csv("Churn_Modelling.csv").drop(['RowNumber', 'Surname', 'CustomerId'], axis=1)
df = pd.get_dummies(df, columns=['Geography', 'Gender'], drop_first=True)
X, y = df.drop('Exited', axis=1), df['Exited']

# Split and standardize data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

# Build and train model
model = Sequential([
    Dense(6, activation='relu', kernel_initializer='uniform', input_dim=X_train.shape[1]),
    Dense(1, activation='sigmoid', kernel_initializer='uniform')
])
model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])
model.fit(X_train, y_train, batch_size=10, epochs=50, verbose=1)

# Predict and display model summary
y_pred = (model.predict(X_test) > 0.5)
model.summary()
