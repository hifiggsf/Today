def fibonacci_iterative(n):
    if n <= 0:
        return 0
    elif n == 1:
        return 1
    
    a = 0
    b = 1

    for i in range(2, n + 1):
        next_fib = a + b
        a = b
        b = next_fib

    return b

n = int(input("Enter the Fibonacci number position: "))
print(f"Fibonacci (Iterative) of {n}: {fibonacci_iterative(n)}")


time complexity : O(n)
Space complexity : O(1)
---------------------------------------------------------------------------------------------------
def fibonacci_recursive(n):
    if n == 0:
        return 0
    elif n == 1:
        return 1
    else:
        return fibonacci_recursive(n-1) + fibonacci_recursive(n-2)

n = int(input("Enter the Fibonacci number position: "))
print(f"Fibonacci (Recursive) of {n}: {fibonacci_recursive(n)}")

time complexity : O(2^n)
Space complexity : O(n)